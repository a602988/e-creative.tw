(window._gsQueue||(window._gsQueue=[])).push(function(){"use strict";var PhysicsProp=function(target,p,velocity,acceleration,friction,stepsPerTimeUnit){this.p=p;this.f=(typeof(target[p])==="function");this.start=this.value=(!this.f)?parseFloat(target[p]):target[((p.indexOf("set")||typeof(target["get"+p.substr(3)])!=="function")?p:"get"+p.substr(3))]();this.velocity=velocity||0;this.v=this.velocity/stepsPerTimeUnit;if(acceleration||acceleration==0){this.acceleration=acceleration;this.a=this.acceleration/(stepsPerTimeUnit*stepsPerTimeUnit);}else{this.acceleration=this.a=0;}
this.friction=1-(friction||0);},_random=Math.random(),_rootFramesTimeline=window._gsDefine.globals.com.greensock.core.Animation._rootFramesTimeline,PhysicsPropsPlugin=window._gsDefine.plugin({propName:"physicsProps",version:"0.1.1",API:2,init:function(target,value,tween){this._target=target;this._tween=tween;this._runBackwards=(tween.vars.runBackwards===true);this._step=0;var tl=tween._timeline,cnt=0,p,curProp;while(tl._timeline){tl=tl._timeline;}
this._stepsPerTimeUnit=(tl===_rootFramesTimeline)?1:30;this._props=[];for(p in value){curProp=value[p];if(curProp.velocity||curProp.acceleration){this._props[cnt++]=new PhysicsProp(target,p,curProp.velocity,curProp.acceleration,curProp.friction,this._stepsPerTimeUnit);this._overwriteProps[cnt]=p;if(curProp.friction){this._hasFriction=true;}}}
return true;},set:function(ratio){var i=this._props.length,time=this._tween._time,target=this._target,curProp,val,steps,remainder,j,tt;if(this._runBackwards){time=this._tween._duration-time;}
if(this._hasFriction){time*=this._stepsPerTimeUnit;steps=(time|0)-this._step;remainder=time%1;if(steps>=0){while(--i>-1){curProp=this._props[i];j=steps;while(--j>-1){curProp.v+=curProp.a;curProp.v*=curProp.friction;curProp.value+=curProp.v;}
val=curProp.value+(curProp.v*remainder);if(curProp.r){val=Math.round(val);}
if(curProp.f){target[curProp.p](val);}else{target[curProp.p]=val;}}}else{while(--i>-1){curProp=this._props[i];j=-steps;while(--j>-1){curProp.value-=curProp.v;curProp.v/=curProp.friction;curProp.v-=curProp.a;}
val=curProp.value+(curProp.v*remainder);if(curProp.r){val=(val+(val<0?-0.5:0.5))|0;}
if(curProp.f){target[curProp.p](val);}else{target[curProp.p]=val;}}}
this._step+=steps;}else{tt=time*time*0.5;while(--i>-1){curProp=this._props[i];val=curProp.start+((curProp.velocity*time)+(curProp.acceleration*tt));if(curProp.r){val=Math.round(val);}
if(curProp.f){target[curProp.p](val);}else{target[curProp.p]=val;}}}}}),p=PhysicsPropsPlugin.prototype;p._kill=function(lookup){var i=this._props.length;while(--i>-1){if(this._props[i].p in lookup){this._props.splice(i,1);}}
return this._super._kill(lookup);};p._roundProps=function(lookup,value){var i=this._props.length;while(--i>-1){if(("physicsProps"in lookup)||(this._props[i].p in lookup)){this._props[i].r=value;}}};PhysicsPropsPlugin._autoCSS=true;PhysicsPropsPlugin._cssRegister=function(){var CSSPlugin=window._gsDefine.globals.CSSPlugin;if(!CSSPlugin){return;}
var _internals=CSSPlugin._internals,_parseToProxy=_internals._parseToProxy,_setPluginRatio=_internals._setPluginRatio,CSSPropTween=_internals.CSSPropTween;_internals._registerComplexSpecialProp("physicsProps",{parser:function(t,e,prop,cssp,pt,plugin){plugin=new PhysicsPropsPlugin();var vars={},p,data;if(e.scale){e.scaleX=e.scaleY=e.scale;delete e.scale;}
for(p in e){vars[p]=_random++;}
data=_parseToProxy(t,vars,cssp,pt,plugin);pt=new CSSPropTween(t,"physicsProps",0,0,data.pt,2);pt.data=data;pt.plugin=plugin;pt.setRatio=_setPluginRatio;plugin._onInitTween(data.proxy,e,cssp._tween);return pt;}});};});if(window._gsDefine){window._gsQueue.pop()();}